/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package trabprog;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;

/**
 *
 * @author Paula Costa
 */
public class NewJDialogListarTrans extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialogListarTrans
     */
    public NewJDialogListarTrans(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    // Ajuste automático das colunas
jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);

// Ajuste da altura das linhas
jTable1.setRowHeight(jTable1.getRowHeight() + 10); // Exemplo de ajuste básico


    preencherAnosNoComboBox();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxTemporada = new javax.swing.JComboBox<>();
        jButtonVoltar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Escolha a temporada de seu interesse:");

        jComboBoxTemporada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trabprog/bola.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jButtonVoltar)
                        .addGap(69, 69, 69)
                        .addComponent(jButtonBuscar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jComboBoxTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jComboBoxTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonBuscar))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
      String temporadaSelecionada = jComboBoxTemporada.getSelectedItem().toString();

try (Connection conn = ConexaoBD.getConnection()) {
    // Consulta SQL para buscar transferências com os nomes de jogador e times
    String sql = """
        SELECT 
            t.Cod_Transf,
            j.Nome_Jogador,
            time_atual.Nome_Time AS Nome_Time_Atual,
            time_negociado.Nome_Time AS Nome_Time_Negociado,
            t.Valor_Transf,
            t.Data_Transf,
            t.Status_Jog
        FROM 
            Transferencia t
        JOIN 
            Jogador j ON t.Cod_Jogador = j.Cod_Jogador
        JOIN 
            Time time_atual ON t.Cod_TimeA = time_atual.Cod_Time
        JOIN 
            Time time_negociado ON t.Cod_TimeN = time_negociado.Cod_Time
        WHERE 
            YEAR(t.Data_Transf) = ?
    """;
    
    try (PreparedStatement stmt = conn.prepareStatement(sql)) {
        stmt.setString(1, temporadaSelecionada);

        try (ResultSet rs = stmt.executeQuery()) {
            // Configuração da tabela com as colunas desejadas
            DefaultTableModel model = new DefaultTableModel(
                new Object[]{"Cod Transferência", "Jogador", "Time Atual", "Time Negociando", "Valor", "Data", "Status da Transferência"},
                0
            );

            // Preenche o modelo com os dados retornados
            boolean hasData = false;
            while (rs.next()) {
                hasData = true;
                model.addRow(new Object[]{
                    rs.getString("Cod_Transf"),
                    rs.getString("Nome_Jogador"),
                    rs.getString("Nome_Time_Atual"),
                    rs.getString("Nome_Time_Negociado"),
                    rs.getDouble("Valor_Transf"),
                    rs.getDate("Data_Transf"),
                    rs.getString("Status_Jog")
                });
            }

            // Exibe mensagem caso não haja dados
            if (!hasData) {
                JOptionPane.showMessageDialog(this, "Nenhuma transferência encontrada para o ano " + temporadaSelecionada, "Sem dados", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Configura e exibe o JDialog com os dados
            NewJDialogResultado dialog = new NewJDialogResultado(null, true);
            dialog.setTabelaResultados(model);
            dialog.setVisible(true);
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Erro ao buscar transferências: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void preencherAnosNoComboBox() {
        // Adiciona anos manualmente
        try {
            // Remove os itens padrão
            jComboBoxTemporada.removeAllItems();

            // Adiciona os anos manualmente
            jComboBoxTemporada.addItem("2020");
            jComboBoxTemporada.addItem("2021");
            jComboBoxTemporada.addItem("2022");
            jComboBoxTemporada.addItem("2023");
            jComboBoxTemporada.addItem("2024");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar anos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialogListarTrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialogListarTrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialogListarTrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialogListarTrans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                NewJDialogListarTrans dialog = new NewJDialogListarTrans(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JComboBox<String> jComboBoxTemporada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
