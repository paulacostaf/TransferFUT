package trabprog;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.ResultSet; // Importa a classe ResultSet

/**
 *
 * @author Paula Costa
 */
public class NewJDialogTransferencia extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog2
     */
    public NewJDialogTransferencia(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCodigoTrans = new javax.swing.JLabel();
        jLabelDataTrans = new javax.swing.JLabel();
        jLabelValorTrans = new javax.swing.JLabel();
        jLabelStatusTrans = new javax.swing.JLabel();
        jLabelJogadorTrans = new javax.swing.JLabel();
        jLabelTimeTrans = new javax.swing.JLabel();
        jLabelTimeATrans = new javax.swing.JLabel();
        jTextFieldCodTransferencia = new javax.swing.JTextField();
        jTextFieldData = new javax.swing.JTextField();
        jTextFieldValor = new javax.swing.JTextField();
        jTextFieldStatus = new javax.swing.JTextField();
        jTextFieldJogador = new javax.swing.JTextField();
        jTextFieldAtual = new javax.swing.JTextField();
        jTextFieldNegociando = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonCancelarTrans = new javax.swing.JButton();
        jButtonSalvarTrans = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabelCodigoTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelCodigoTrans.setText("Código:");

        jLabelDataTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelDataTrans.setText("Data:");

        jLabelValorTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelValorTrans.setText("Valor:");

        jLabelStatusTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelStatusTrans.setText("Status:");

        jLabelJogadorTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelJogadorTrans.setText("Código Jogador:");

        jLabelTimeTrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelTimeTrans.setText("Código time atual:");

        jLabelTimeATrans.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelTimeATrans.setText("Código time negociando:");

        jTextFieldValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldValorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Digite os dados para cadastrar a transferência de um jogador");

        jButtonCancelarTrans.setText("Cancelar");
        jButtonCancelarTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarTransActionPerformed(evt);
            }
        });

        jButtonSalvarTrans.setText("Salvar");
        jButtonSalvarTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarTransActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trabprog/bola.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelJogadorTrans)
                            .addComponent(jLabelTimeTrans)
                            .addComponent(jLabelTimeATrans)
                            .addComponent(jLabelValorTrans)
                            .addComponent(jLabelDataTrans)
                            .addComponent(jLabelCodigoTrans)
                            .addComponent(jLabelStatusTrans))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNegociando, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldJogador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(jTextFieldAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCodTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jButtonCancelarTrans)
                        .addGap(94, 94, 94)
                        .addComponent(jButtonSalvarTrans)))
                .addContainerGap(260, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigoTrans)
                    .addComponent(jTextFieldCodTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDataTrans)
                    .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelValorTrans)
                    .addComponent(jTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStatusTrans)
                    .addComponent(jTextFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelJogadorTrans)
                    .addComponent(jTextFieldJogador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTimeTrans)
                    .addComponent(jTextFieldAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTimeATrans)
                    .addComponent(jTextFieldNegociando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelarTrans)
                    .addComponent(jButtonSalvarTrans))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldValorActionPerformed

    private void jButtonCancelarTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarTransActionPerformed
        // TODO add your handling code here:
        int resposta = JOptionPane.showConfirmDialog(this,
                "Tem certeza de que deseja cancelar o cadastro? Os dados preenchidos serão perdidos.",
                "Confirmação",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (resposta == JOptionPane.YES_OPTION) {
            this.dispose(); // Fecha o JDialog
        }
    }//GEN-LAST:event_jButtonCancelarTransActionPerformed

    private void jButtonSalvarTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarTransActionPerformed
        // TODO add your handling code here:
        String codTransferencia = jTextFieldCodTransferencia.getText().trim();
        String jogador = jTextFieldJogador.getText().trim();
        String timeAtual = jTextFieldAtual.getText().trim();
        String timeNegociando = jTextFieldNegociando.getText().trim();
        String valorTransferencia = jTextFieldValor.getText().trim();
        String data = jTextFieldData.getText().trim(); // Data da transferência
        String status = jTextFieldStatus.getText().trim(); // Status do jogador

        // Validação de entradas
        if (codTransferencia.isEmpty() || jogador.isEmpty() || timeAtual.isEmpty()
                || timeNegociando.isEmpty() || valorTransferencia.isEmpty() || data.isEmpty() || status.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            double valor = Double.parseDouble(valorTransferencia); // Valida o valor como número

            if (valor <= 0) {
                JOptionPane.showMessageDialog(this, "O valor da transferência deve ser maior que zero!", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try (Connection conn = ConexaoBD.getConnection()) {
                // Verificar se o código de transferência já existe no banco
                String sqlCheck = "SELECT COUNT(*) FROM Transferencia WHERE Cod_Transf = ?";
                try (PreparedStatement stmtCheck = conn.prepareStatement(sqlCheck)) {
                    stmtCheck.setString(1, codTransferencia);
                    try (ResultSet rs = stmtCheck.executeQuery()) {
                        if (rs.next() && rs.getInt(1) > 0) {
                            JOptionPane.showMessageDialog(this, "Já existe uma transferência com este código!", "Erro", JOptionPane.ERROR_MESSAGE);
                            return; // Interrompe o processo se o código já existir
                        }
                    }
                }

                // Insere no banco de dados
                String sql = "INSERT INTO Transferencia (Cod_Transf, Cod_Jogador, Cod_TimeA, Cod_TimeN, Valor_Transf, Data_Transf, Status_Jog) VALUES (?, ?, ?, ?, ?, ?, ?)";
                try (PreparedStatement stmt = conn.prepareStatement(sql)) {
                    stmt.setString(1, codTransferencia);
                    stmt.setString(2, jogador);
                    stmt.setString(3, timeAtual);
                    stmt.setString(4, timeNegociando);
                    stmt.setDouble(5, valor);
                    stmt.setString(6, data);
                    stmt.setString(7, status);

                    stmt.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Transferência cadastrada com sucesso!");
                    this.dispose(); // Fecha o diálogo após salvar
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "O valor da transferência deve ser um número válido!", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar transferência: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSalvarTransActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJDialogTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJDialogTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJDialogTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJDialogTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewJDialogTransferencia dialog = new NewJDialogTransferencia(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelarTrans;
    private javax.swing.JButton jButtonSalvarTrans;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCodigoTrans;
    private javax.swing.JLabel jLabelDataTrans;
    private javax.swing.JLabel jLabelJogadorTrans;
    private javax.swing.JLabel jLabelStatusTrans;
    private javax.swing.JLabel jLabelTimeATrans;
    private javax.swing.JLabel jLabelTimeTrans;
    private javax.swing.JLabel jLabelValorTrans;
    private javax.swing.JTextField jTextFieldAtual;
    private javax.swing.JTextField jTextFieldCodTransferencia;
    private javax.swing.JTextField jTextFieldData;
    private javax.swing.JTextField jTextFieldJogador;
    private javax.swing.JTextField jTextFieldNegociando;
    private javax.swing.JTextField jTextFieldStatus;
    private javax.swing.JTextField jTextFieldValor;
    // End of variables declaration//GEN-END:variables
}
